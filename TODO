   Yeti TODO.
~~~~~~~~~~~~~~~~~

* YetiDoc to automatically generate html documentation
  + Don't store yetidoc's in parsetree, when not generating docs
* Fix f x = {x}; - type system copies to much and gets wrong type sig
* Some kind of reflection
* Fix structs - better comparision (with sorting) and
                restructure holding properties
* super reference in Java classes
  (requires generating accessor methods to proxy them)
* turn constant class fields into private static final
* Use typedef's in type pretty-printing (including error messages)
* Support as in type definitions for recursive types
* Rebuild modified dependencies when compiling
  + Something better than current MixedTask for java/yeti mixed code?
* Extendable structs?
* Foreign structs (java dto -> struct?)
* Ensure that unit values really are null pointers
  when casted into Java object
* Better error messages
  + filter out noise from deep struct-mismatch error messages
* Optimise lambdas into simple methods when all their references
  are fully applied
* Allow cons pattern match (::) on arrays?
* Optional Java generics support?
* Direct double optimisation, when it can be deduced,
  that there are always floats
* Direct struct-ref optimisation, when only known structs are accessed
* Avoid upper/lowercase dups on generated classes
