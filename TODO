  Yeti TODO.
~~~~~~~~~~~~~~~~~

* Better error messages
  + Module type not fully defined message is confusing,
    should give more info about where error is.
* Fix full path script invocation (yeti /some/fubar/script.yeti)
  + Use unique path identifiers (File? URL?) on module (re)compilation.
  + Fix the circular dependency checking (TODO in CompileCtx.compile()).
  + Look what's wrong with handling win32 paths
* Rebuild modified dependencies when compiling
  + In this case doc index should still include all module names.
* v1.0
* Typedefs in REPL
* Foreign structs (java dto -> struct?)
* Operator to copy mutable structure fields between two different structures
* Compile modules required by load directly after parse, before type analyse
* Support as in type definitions for recursive types
* Support module qualification on type, like x is foo.sometype
* Dependency analyses on struct field self-bindings?
  (could be done by binding only free typevars first and
   unifing those with actual function field types later)
* struct mapping (as in doc/stmap.yeti)
* Allow cons pattern match (::) on arrays?
* Exhaustive list match detection probably could be improved by something
  like introducing FL_EMPTY_PATTERN and keeping account about the list tail
  being exhaustive.
* Review the Java<->Yeti type autoconversions?
* Avoid upper/lowercase dups on generated classes
* Immutable tree map support - this seems to be popular feature. ;)
* Optional Java generics support?
* Direct struct-ref optimisation, when only known structs are accessed
